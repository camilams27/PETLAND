{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Silva\\\\Desktop\\\\projeto - web\\\\petland-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nlet AddPetComponent = class AddPetComponent {\n  constructor(router, service, _snackBar, modal, dialogRef) {\n    this.router = router;\n    this.service = service;\n    this._snackBar = _snackBar;\n    this.modal = modal;\n    this.dialogRef = dialogRef;\n  }\n\n  ngOnInit() {\n    this.formPet = new FormGroup({\n      nome: new FormControl(''),\n      idade: new FormControl(''),\n      raca: new FormControl(''),\n      imagem: new FormControl('')\n    });\n  }\n\n  createAgenda() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let loginStorage = localStorage.getItem('login');\n      loginStorage = JSON.parse(loginStorage);\n      (yield _this.service.createPet({\n        nome: _this.formPet.value.nome,\n        idade: _this.formPet.value.idade,\n        raca: _this.formPet.value.raca,\n        imagem: _this.formPet.value.imagem\n      }, loginStorage.user)).subscribe(pet => {\n        _this._snackBar.open(pet.message, '', {\n          horizontalPosition: 'center',\n          verticalPosition: 'top',\n          duration: 2500\n        });\n\n        if (pet.success) {\n          _this.dialogRef.close();\n\n          window.location.reload();\n        }\n      });\n    })();\n  }\n\n};\nAddPetComponent = __decorate([Component({\n  selector: 'app-add-pet',\n  templateUrl: './add-pet.component.html',\n  styleUrls: ['./add-pet.component.css']\n})], AddPetComponent);\nexport { AddPetComponent };","map":{"version":3,"sources":["C:/Users/Silva/Desktop/projeto - web/petland-app/src/app/views/add-pet/add-pet.component.ts"],"names":["__decorate","Component","FormControl","FormGroup","AddPetComponent","constructor","router","service","_snackBar","modal","dialogRef","ngOnInit","formPet","nome","idade","raca","imagem","createAgenda","loginStorage","localStorage","getItem","JSON","parse","createPet","value","user","subscribe","pet","open","message","horizontalPosition","verticalPosition","duration","success","close","window","location","reload","selector","templateUrl","styleUrls"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,gBAAvC;AACA,IAAIC,eAAe,GAAG,MAAMA,eAAN,CAAsB;AACxCC,EAAAA,WAAW,CAACC,MAAD,EAASC,OAAT,EAAkBC,SAAlB,EAA6BC,KAA7B,EAAoCC,SAApC,EAA+C;AACtD,SAAKJ,MAAL,GAAcA,MAAd;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACH;;AACDC,EAAAA,QAAQ,GAAG;AACP,SAAKC,OAAL,GAAe,IAAIT,SAAJ,CAAc;AACzBU,MAAAA,IAAI,EAAE,IAAIX,WAAJ,CAAgB,EAAhB,CADmB;AAEzBY,MAAAA,KAAK,EAAE,IAAIZ,WAAJ,CAAgB,EAAhB,CAFkB;AAGzBa,MAAAA,IAAI,EAAE,IAAIb,WAAJ,CAAgB,EAAhB,CAHmB;AAIzBc,MAAAA,MAAM,EAAE,IAAId,WAAJ,CAAgB,EAAhB;AAJiB,KAAd,CAAf;AAMH;;AACKe,EAAAA,YAAY,GAAG;AAAA;;AAAA;AACjB,UAAIC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAnB;AACAF,MAAAA,YAAY,GAAGG,IAAI,CAACC,KAAL,CAAWJ,YAAX,CAAf;AACA,aAAO,KAAI,CAACX,OAAL,CAAagB,SAAb,CAAuB;AAC1BV,QAAAA,IAAI,EAAE,KAAI,CAACD,OAAL,CAAaY,KAAb,CAAmBX,IADC;AAE1BC,QAAAA,KAAK,EAAE,KAAI,CAACF,OAAL,CAAaY,KAAb,CAAmBV,KAFA;AAG1BC,QAAAA,IAAI,EAAE,KAAI,CAACH,OAAL,CAAaY,KAAb,CAAmBT,IAHC;AAI1BC,QAAAA,MAAM,EAAE,KAAI,CAACJ,OAAL,CAAaY,KAAb,CAAmBR;AAJD,OAAvB,EAKJE,YAAY,CAACO,IALT,CAAP,EAKuBC,SALvB,CAKiCC,GAAG,IAAI;AACpC,QAAA,KAAI,CAACnB,SAAL,CAAeoB,IAAf,CAAoBD,GAAG,CAACE,OAAxB,EAAiC,EAAjC,EAAqC;AACjCC,UAAAA,kBAAkB,EAAE,QADa;AAEjCC,UAAAA,gBAAgB,EAAE,KAFe;AAGjCC,UAAAA,QAAQ,EAAE;AAHuB,SAArC;;AAKA,YAAIL,GAAG,CAACM,OAAR,EAAiB;AACb,UAAA,KAAI,CAACvB,SAAL,CAAewB,KAAf;;AACAC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH;AACJ,OAfD;AAHiB;AAmBpB;;AAnCuC,CAA5C;AAqCAjC,eAAe,GAAGJ,UAAU,CAAC,CACzBC,SAAS,CAAC;AACNqC,EAAAA,QAAQ,EAAE,aADJ;AAENC,EAAAA,WAAW,EAAE,0BAFP;AAGNC,EAAAA,SAAS,EAAE,CAAC,yBAAD;AAHL,CAAD,CADgB,CAAD,EAMzBpC,eANyB,CAA5B;AAOA,SAASA,eAAT","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nlet AddPetComponent = class AddPetComponent {\r\n    constructor(router, service, _snackBar, modal, dialogRef) {\r\n        this.router = router;\r\n        this.service = service;\r\n        this._snackBar = _snackBar;\r\n        this.modal = modal;\r\n        this.dialogRef = dialogRef;\r\n    }\r\n    ngOnInit() {\r\n        this.formPet = new FormGroup({\r\n            nome: new FormControl(''),\r\n            idade: new FormControl(''),\r\n            raca: new FormControl(''),\r\n            imagem: new FormControl('')\r\n        });\r\n    }\r\n    async createAgenda() {\r\n        let loginStorage = localStorage.getItem('login');\r\n        loginStorage = JSON.parse(loginStorage);\r\n        (await this.service.createPet({\r\n            nome: this.formPet.value.nome,\r\n            idade: this.formPet.value.idade,\r\n            raca: this.formPet.value.raca,\r\n            imagem: this.formPet.value.imagem\r\n        }, loginStorage.user)).subscribe(pet => {\r\n            this._snackBar.open(pet.message, '', {\r\n                horizontalPosition: 'center',\r\n                verticalPosition: 'top',\r\n                duration: 2500\r\n            });\r\n            if (pet.success) {\r\n                this.dialogRef.close();\r\n                window.location.reload();\r\n            }\r\n        });\r\n    }\r\n};\r\nAddPetComponent = __decorate([\r\n    Component({\r\n        selector: 'app-add-pet',\r\n        templateUrl: './add-pet.component.html',\r\n        styleUrls: ['./add-pet.component.css']\r\n    })\r\n], AddPetComponent);\r\nexport { AddPetComponent };\r\n"]},"metadata":{},"sourceType":"module"}