{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Silva\\\\Desktop\\\\projeto - web\\\\petland-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ClientServiceService {\n  constructor(http) {\n    this.http = http;\n  }\n\n  getClients() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return yield _this.http.get('https://teste-355700.uc.r.appspot.com/clients').subscribe(testes => console.log('testeeeeeweeergfgh'));\n    })();\n  }\n\n  loginClient(client) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this2.http.post('https://teste-355700.uc.r.appspot.com/clients/login', client);\n    })();\n  }\n\n  loginClient(client) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this3.http.post('https://teste-355700.uc.r.appspot.com/clients/login', client);\n    })();\n  }\n\n}\n\nClientServiceService.ɵfac = function ClientServiceService_Factory(t) {\n  return new (t || ClientServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nClientServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ClientServiceService,\n  factory: ClientServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/Silva/Desktop/projeto - web/petland-app/src/app/services/client-service.service.ts"],"names":["i0","i1","ClientServiceService","constructor","http","getClients","get","subscribe","testes","console","log","loginClient","client","post","ɵfac","ClientServiceService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,oBAAN,CAA2B;AAC9BC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACH;;AACKC,EAAAA,UAAU,GAAG;AAAA;;AAAA;AACf,mBAAa,KAAI,CAACD,IAAL,CAAUE,GAAV,CAAc,+BAAd,EAA+CC,SAA/C,CAAyDC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAY,oBAAZ,CAAnE,CAAb;AADe;AAElB;;AACKC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAAA;;AAAA;AACtB,aAAO,MAAI,CAACR,IAAL,CAAUS,IAAV,CAAe,qCAAf,EAAsDD,MAAtD,CAAP;AADsB;AAEzB;;AACKD,EAAAA,WAAW,CAACC,MAAD,EAAS;AAAA;;AAAA;AACtB,aAAO,MAAI,CAACR,IAAL,CAAUS,IAAV,CAAe,qCAAf,EAAsDD,MAAtD,CAAP;AADsB;AAEzB;;AAZ6B;;AAclCV,oBAAoB,CAACY,IAArB,GAA4B,SAASC,4BAAT,CAAsCC,CAAtC,EAAyC;AAAE,SAAO,KAAKA,CAAC,IAAId,oBAAV,EAAgCF,EAAE,CAACiB,QAAH,CAAYhB,EAAE,CAACiB,UAAf,CAAhC,CAAP;AAAqE,CAA5I;;AACAhB,oBAAoB,CAACiB,KAArB,GAA6B,aAAcnB,EAAE,CAACoB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEnB,oBAAT;AAA+BoB,EAAAA,OAAO,EAAEpB,oBAAoB,CAACY,IAA7D;AAAmES,EAAAA,UAAU,EAAE;AAA/E,CAAtB,CAA3C","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class ClientServiceService {\r\n    constructor(http) {\r\n        this.http = http;\r\n    }\r\n    async getClients() {\r\n        return await this.http.get('https://teste-355700.uc.r.appspot.com/clients').subscribe(testes => console.log('testeeeeeweeergfgh'));\r\n    }\r\n    async loginClient(client) {\r\n        return this.http.post('https://teste-355700.uc.r.appspot.com/clients/login', client);\r\n    }\r\n    async loginClient(client) {\r\n        return this.http.post('https://teste-355700.uc.r.appspot.com/clients/login', client);\r\n    }\r\n}\r\nClientServiceService.ɵfac = function ClientServiceService_Factory(t) { return new (t || ClientServiceService)(i0.ɵɵinject(i1.HttpClient)); };\r\nClientServiceService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ClientServiceService, factory: ClientServiceService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}