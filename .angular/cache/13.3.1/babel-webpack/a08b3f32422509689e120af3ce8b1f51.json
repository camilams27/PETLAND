{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Silva\\\\Desktop\\\\projeto - web\\\\petland-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nlet CadastroComponent = class CadastroComponent {\n  constructor(router, service, _snackBar, modal, dialogRef) {\n    this.router = router;\n    this.service = service;\n    this._snackBar = _snackBar;\n    this.modal = modal;\n    this.dialogRef = dialogRef;\n    this.hide = true;\n  }\n\n  ngOnInit() {\n    this.formulario = new FormGroup({\n      nome: new FormControl(''),\n      login: new FormControl(''),\n      telefone: new FormControl(''),\n      email: new FormControl(''),\n      dataNasc: new FormControl(''),\n      senha: new FormControl('')\n    });\n    console.log(this.service.getClients());\n  }\n\n  createClient() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      (yield _this.service.createClient({\n        nome: _this.formulario.value.nome,\n        login: _this.formulario.value.login,\n        telefone: _this.formulario.value.telefone,\n        email: _this.formulario.value.email,\n        dataNasc: _this.formulario.value.dataNasc,\n        senha: _this.formulario.value.senha\n      })).subscribe(client => {\n        _this._snackBar.open(client.message, '', {\n          horizontalPosition: 'center',\n          verticalPosition: 'top',\n          duration: 2500\n        });\n\n        if (client.success) {}\n      });\n    })();\n  }\n\n};\nCadastroComponent = __decorate([Component({\n  selector: 'app-cadastro',\n  templateUrl: './cadastro.component.html',\n  styleUrls: ['./cadastro.component.css']\n})], CadastroComponent);\nexport { CadastroComponent };","map":{"version":3,"sources":["C:/Users/Silva/Desktop/projeto - web/petland-app/src/app/views/cadastro/cadastro.component.ts"],"names":["__decorate","Component","FormControl","FormGroup","CadastroComponent","constructor","router","service","_snackBar","modal","dialogRef","hide","ngOnInit","formulario","nome","login","telefone","email","dataNasc","senha","console","log","getClients","createClient","value","subscribe","client","open","message","horizontalPosition","verticalPosition","duration","success","selector","templateUrl","styleUrls"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,gBAAvC;AACA,IAAIC,iBAAiB,GAAG,MAAMA,iBAAN,CAAwB;AAC5CC,EAAAA,WAAW,CAACC,MAAD,EAASC,OAAT,EAAkBC,SAAlB,EAA6BC,KAA7B,EAAoCC,SAApC,EAA+C;AACtD,SAAKJ,MAAL,GAAcA,MAAd;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,IAAL,GAAY,IAAZ;AACH;;AACDC,EAAAA,QAAQ,GAAG;AACP,SAAKC,UAAL,GAAkB,IAAIV,SAAJ,CAAc;AAC5BW,MAAAA,IAAI,EAAE,IAAIZ,WAAJ,CAAgB,EAAhB,CADsB;AAE5Ba,MAAAA,KAAK,EAAE,IAAIb,WAAJ,CAAgB,EAAhB,CAFqB;AAG5Bc,MAAAA,QAAQ,EAAE,IAAId,WAAJ,CAAgB,EAAhB,CAHkB;AAI5Be,MAAAA,KAAK,EAAE,IAAIf,WAAJ,CAAgB,EAAhB,CAJqB;AAK5BgB,MAAAA,QAAQ,EAAE,IAAIhB,WAAJ,CAAgB,EAAhB,CALkB;AAM5BiB,MAAAA,KAAK,EAAE,IAAIjB,WAAJ,CAAgB,EAAhB;AANqB,KAAd,CAAlB;AAQAkB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,OAAL,CAAae,UAAb,EAAZ;AACH;;AACKC,EAAAA,YAAY,GAAG;AAAA;;AAAA;AACjB,aAAO,KAAI,CAAChB,OAAL,CAAagB,YAAb,CAA0B;AAC7BT,QAAAA,IAAI,EAAE,KAAI,CAACD,UAAL,CAAgBW,KAAhB,CAAsBV,IADC;AAE7BC,QAAAA,KAAK,EAAE,KAAI,CAACF,UAAL,CAAgBW,KAAhB,CAAsBT,KAFA;AAG7BC,QAAAA,QAAQ,EAAE,KAAI,CAACH,UAAL,CAAgBW,KAAhB,CAAsBR,QAHH;AAI7BC,QAAAA,KAAK,EAAE,KAAI,CAACJ,UAAL,CAAgBW,KAAhB,CAAsBP,KAJA;AAK7BC,QAAAA,QAAQ,EAAE,KAAI,CAACL,UAAL,CAAgBW,KAAhB,CAAsBN,QALH;AAM7BC,QAAAA,KAAK,EAAE,KAAI,CAACN,UAAL,CAAgBW,KAAhB,CAAsBL;AANA,OAA1B,CAAP,EAOIM,SAPJ,CAOcC,MAAM,IAAI;AACpB,QAAA,KAAI,CAAClB,SAAL,CAAemB,IAAf,CAAoBD,MAAM,CAACE,OAA3B,EAAoC,EAApC,EAAwC;AACpCC,UAAAA,kBAAkB,EAAE,QADgB;AAEpCC,UAAAA,gBAAgB,EAAE,KAFkB;AAGpCC,UAAAA,QAAQ,EAAE;AAH0B,SAAxC;;AAKA,YAAIL,MAAM,CAACM,OAAX,EAAoB,CACnB;AACJ,OAfD;AADiB;AAiBpB;;AArC2C,CAAhD;AAuCA5B,iBAAiB,GAAGJ,UAAU,CAAC,CAC3BC,SAAS,CAAC;AACNgC,EAAAA,QAAQ,EAAE,cADJ;AAENC,EAAAA,WAAW,EAAE,2BAFP;AAGNC,EAAAA,SAAS,EAAE,CAAC,0BAAD;AAHL,CAAD,CADkB,CAAD,EAM3B/B,iBAN2B,CAA9B;AAOA,SAASA,iBAAT","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nlet CadastroComponent = class CadastroComponent {\r\n    constructor(router, service, _snackBar, modal, dialogRef) {\r\n        this.router = router;\r\n        this.service = service;\r\n        this._snackBar = _snackBar;\r\n        this.modal = modal;\r\n        this.dialogRef = dialogRef;\r\n        this.hide = true;\r\n    }\r\n    ngOnInit() {\r\n        this.formulario = new FormGroup({\r\n            nome: new FormControl(''),\r\n            login: new FormControl(''),\r\n            telefone: new FormControl(''),\r\n            email: new FormControl(''),\r\n            dataNasc: new FormControl(''),\r\n            senha: new FormControl('')\r\n        });\r\n        console.log(this.service.getClients());\r\n    }\r\n    async createClient() {\r\n        (await this.service.createClient({\r\n            nome: this.formulario.value.nome,\r\n            login: this.formulario.value.login,\r\n            telefone: this.formulario.value.telefone,\r\n            email: this.formulario.value.email,\r\n            dataNasc: this.formulario.value.dataNasc,\r\n            senha: this.formulario.value.senha\r\n        })).subscribe(client => {\r\n            this._snackBar.open(client.message, '', {\r\n                horizontalPosition: 'center',\r\n                verticalPosition: 'top',\r\n                duration: 2500\r\n            });\r\n            if (client.success) {\r\n            }\r\n        });\r\n    }\r\n};\r\nCadastroComponent = __decorate([\r\n    Component({\r\n        selector: 'app-cadastro',\r\n        templateUrl: './cadastro.component.html',\r\n        styleUrls: ['./cadastro.component.css']\r\n    })\r\n], CadastroComponent);\r\nexport { CadastroComponent };\r\n"]},"metadata":{},"sourceType":"module"}